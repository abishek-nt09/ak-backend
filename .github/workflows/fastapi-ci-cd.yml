name: Deploy Backend

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Upload Backend Files to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          echo "📤 Copying backend files to EC2..."
          scp -o StrictHostKeyChecking=no -i private_key.pem -r . ${USER}@${HOST}:/home/${USER}/backend-temp

      - name: Deploy and Start Backend
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_MAILBOX: ${{ secrets.AZURE_MAILBOX }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          echo "🚀 Connecting to EC2 and deploying backend..."
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER}@${HOST} '
            set -e
            APP_DIR="/var/www/ats/backend"

            echo "🧹 Cleaning old backend and moving new files..."
            sudo rm -rf $APP_DIR
            sudo mv ~/backend-temp $APP_DIR
            cd $APP_DIR

            echo "⚙️ Creating virtual environment and installing dependencies..."
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "🔐 Creating .env file..."
            cat > .env << ENV
            FRONTEND_HOST="http://${HOST}"
            ENVIRONMENT="production"
            BACKEND_CORS_ORIGINS="http://${HOST}"
            SECRET_KEY="${SECRET_KEY}"
            DATABASE_URL="postgresql://${DB_USER}:${DB_PASS}@localhost/${DB_NAME}"
            AZURE_TENANT_ID="${AZURE_TENANT_ID}"
            AZURE_CLIENT_ID="${AZURE_CLIENT_ID}"
            AZURE_CLIENT_SECRET="${AZURE_CLIENT_SECRET}"
            AZURE_MAILBOX="${AZURE_MAILBOX}"
            ENV

            echo "🔁 Reloading and starting FastAPI service..."
            sudo systemctl daemon-reload
            sudo systemctl restart fastapi

            echo "✅ Backend deployed successfully!"
          '
