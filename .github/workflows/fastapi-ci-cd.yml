name: ATS Backend Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  upload-code:
    name: üì§ Upload Backend Code to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload backend folder to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          echo "üì¶ Compressing backend files..."
          tar -czf backend.tar.gz -C backend .

          echo "üì§ Transferring files to EC2..."
          scp -o StrictHostKeyChecking=no -i private_key.pem backend.tar.gz ${USER}@${HOST}:/home/${USER}/backend.tar.gz

  deploy-backend:
    name: üöÄ Deploy Backend
    needs: upload-code
    runs-on: ubuntu-latest

    steps:
      - name: Deploy on EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_MAILBOX: ${{ secrets.AZURE_MAILBOX }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER}@${HOST} "
            set -e
            echo 'üöÄ Deploying backend...'
            sudo mkdir -p /var/www/ats/backend
            sudo rm -rf /var/www/ats/backend/*
            sudo tar -xzf /home/${USER}/backend.tar.gz -C /var/www/ats/backend

            cd /var/www/ats/backend

            echo 'üêç Creating virtual environment...'
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo 'üßæ Creating .env file...'
            cat <<EOT | sudo tee /var/www/ats/backend/.env > /dev/null
            FRONTEND_HOST=\"http://${HOST}\"
            ENVIRONMENT=\"production\"
            BACKEND_CORS_ORIGINS=\"http://${HOST}\"
            SECRET_KEY=\"${SECRET_KEY}\"
            DATABASE_URL=\"postgresql://${DB_USER}:${DB_PASS}@localhost/${DB_NAME}\"
            AZURE_TENANT_ID=\"${AZURE_TENANT_ID}\"
            AZURE_CLIENT_ID=\"${AZURE_CLIENT_ID}\"
            AZURE_CLIENT_SECRET=\"${AZURE_CLIENT_SECRET}\"
            AZURE_MAILBOX=\"${AZURE_MAILBOX}\"
            EOT

            echo 'üîÅ Reloading and enabling FastAPI systemd service...'
            sudo systemctl daemon-reload
            sudo systemctl enable fastapi
            sudo systemctl restart fastapi

            echo '‚úÖ Backend deployment successful.'
          "
